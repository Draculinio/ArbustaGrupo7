<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-07-27T19:53:07 ART" name="Command line suite" finished-at="2020-07-27T19:53:53 ART" duration-ms="45798">
    <groups>
    </groups>
    <test started-at="2020-07-27T19:53:07 ART" name="Command line test" finished-at="2020-07-27T19:53:53 ART" duration-ms="45798">
      <class name="myTests.TestAsserts">
        <test-method signature="isEqual()[pri:0, instance:myTests.TestAsserts@10dba097]" started-at="2020-07-27T19:53:07 ART" name="isEqual" finished-at="2020-07-27T19:53:07 ART" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEqual -->
        <test-method signature="isEqualN()[pri:0, instance:myTests.TestAsserts@10dba097]" started-at="2020-07-27T19:53:07 ART" name="isEqualN" finished-at="2020-07-27T19:53:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEqualN -->
        <test-method signature="isFalse()[pri:0, instance:myTests.TestAsserts@10dba097]" started-at="2020-07-27T19:53:07 ART" name="isFalse" finished-at="2020-07-27T19:53:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFalse -->
        <test-method signature="isNotEqual()[pri:0, instance:myTests.TestAsserts@10dba097]" started-at="2020-07-27T19:53:07 ART" name="isNotEqual" finished-at="2020-07-27T19:53:07 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNotEqual -->
        <test-method signature="isNotNull()[pri:0, instance:myTests.TestAsserts@10dba097]" started-at="2020-07-27T19:53:07 ART" name="isNotNull" finished-at="2020-07-27T19:53:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNotNull -->
        <test-method signature="isNull()[pri:0, instance:myTests.TestAsserts@10dba097]" started-at="2020-07-27T19:53:07 ART" name="isNull" finished-at="2020-07-27T19:53:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNull -->
        <test-method signature="isTrue()[pri:0, instance:myTests.TestAsserts@10dba097]" started-at="2020-07-27T19:53:07 ART" name="isTrue" finished-at="2020-07-27T19:53:07 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isTrue -->
        <test-method signature="softAsserts()[pri:0, instance:myTests.TestAsserts@10dba097]" started-at="2020-07-27T19:53:07 ART" name="softAsserts" finished-at="2020-07-27T19:53:07 ART" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Need to see this expected [2] but found [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Need to see this expected [2] but found [1]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at myTests.TestAsserts.softAsserts(TestAsserts.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- softAsserts -->
      </class> <!-- myTests.TestAsserts -->
      <class name="myTests.TestSearch">
        <test-method is-config="true" signature="setUp()[pri:0, instance:myTests.TestSearch@1786f9d5]" started-at="2020-07-27T19:53:07 ART" name="setUp" finished-at="2020-07-27T19:53:19 ART" duration-ms="11776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchDresses()[pri:0, instance:myTests.TestSearch@1786f9d5]" started-at="2020-07-27T19:53:19 ART" name="searchDresses" finished-at="2020-07-27T19:53:24 ART" duration-ms="5535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchDresses -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myTests.TestSearch@1786f9d5]" started-at="2020-07-27T19:53:24 ART" name="tearDown" finished-at="2020-07-27T19:53:25 ART" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:myTests.TestSearch@1786f9d5]" started-at="2020-07-27T19:53:25 ART" name="setUp" finished-at="2020-07-27T19:53:36 ART" duration-ms="10494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchNoResult()[pri:0, instance:myTests.TestSearch@1786f9d5]" started-at="2020-07-27T19:53:36 ART" name="searchNoResult" finished-at="2020-07-27T19:53:38 ART" duration-ms="2569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchNoResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myTests.TestSearch@1786f9d5]" started-at="2020-07-27T19:53:38 ART" name="tearDown" finished-at="2020-07-27T19:53:39 ART" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:myTests.TestSearch@1786f9d5]" started-at="2020-07-27T19:53:39 ART" name="setUp" finished-at="2020-07-27T19:53:50 ART" duration-ms="10522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchTSHIRTS()[pri:0, instance:myTests.TestSearch@1786f9d5]" started-at="2020-07-27T19:53:50 ART" name="searchTSHIRTS" finished-at="2020-07-27T19:53:52 ART" duration-ms="2566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTSHIRTS -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:myTests.TestSearch@1786f9d5]" started-at="2020-07-27T19:53:52 ART" name="tearDown" finished-at="2020-07-27T19:53:53 ART" duration-ms="706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- myTests.TestSearch -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
