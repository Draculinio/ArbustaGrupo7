<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="13" passed="10" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-08-03T20:50:06 ART" name="Command line suite" finished-at="2020-08-03T20:51:06 ART" duration-ms="60115">
    <groups>
    </groups>
    <test started-at="2020-08-03T20:50:06 ART" name="Command line test" finished-at="2020-08-03T20:51:06 ART" duration-ms="60115">
      <class name="myTests.TestAsserts">
        <test-method signature="isEqual()[pri:0, instance:myTests.TestAsserts@47db50c5]" started-at="2020-08-03T20:50:06 ART" name="isEqual" finished-at="2020-08-03T20:50:06 ART" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEqual -->
        <test-method signature="isEqualN()[pri:0, instance:myTests.TestAsserts@47db50c5]" started-at="2020-08-03T20:50:06 ART" name="isEqualN" finished-at="2020-08-03T20:50:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEqualN -->
        <test-method signature="isNotEqual()[pri:0, instance:myTests.TestAsserts@47db50c5]" started-at="2020-08-03T20:50:06 ART" name="isNotEqual" finished-at="2020-08-03T20:50:06 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNotEqual -->
        <test-method signature="isFalse()[pri:0, instance:myTests.TestAsserts@47db50c5]" started-at="2020-08-03T20:50:06 ART" name="isFalse" finished-at="2020-08-03T20:50:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFalse -->
        <test-method signature="isNotNull()[pri:0, instance:myTests.TestAsserts@47db50c5]" started-at="2020-08-03T20:50:06 ART" name="isNotNull" finished-at="2020-08-03T20:50:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNotNull -->
        <test-method signature="isNull()[pri:0, instance:myTests.TestAsserts@47db50c5]" started-at="2020-08-03T20:50:06 ART" name="isNull" finished-at="2020-08-03T20:50:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNull -->
        <test-method signature="isTrue()[pri:0, instance:myTests.TestAsserts@47db50c5]" started-at="2020-08-03T20:50:06 ART" name="isTrue" finished-at="2020-08-03T20:50:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isTrue -->
        <test-method signature="softAsserts()[pri:0, instance:myTests.TestAsserts@47db50c5]" started-at="2020-08-03T20:50:06 ART" name="softAsserts" finished-at="2020-08-03T20:50:06 ART" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Need to see this expected [2] but found [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Need to see this expected [2] but found [1]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at myTests.TestAsserts.softAsserts(TestAsserts.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- softAsserts -->
      </class> <!-- myTests.TestAsserts -->
      <class name="myTests.TestSelectOrder">
        <test-method is-config="true" signature="setUp()[pri:0, instance:myTests.TestSelectOrder@4d1b0d2a]" started-at="2020-08-03T20:50:43 ART" name="setUp" finished-at="2020-08-03T20:50:51 ART" duration-ms="8447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeAll()[pri:0, instance:myTests.TestSelectOrder@4d1b0d2a]" started-at="2020-08-03T20:50:43 ART" name="beforeAll" finished-at="2020-08-03T20:50:43 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeAll -->
        <test-method signature="selectByVisibleText()[pri:0, instance:myTests.TestSelectOrder@4d1b0d2a]" started-at="2020-08-03T20:50:51 ART" name="selectByVisibleText" description="Selects by visible text" finished-at="2020-08-03T20:51:05 ART" duration-ms="14238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectByVisibleText -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:myTests.TestSelectOrder@4d1b0d2a]" started-at="2020-08-03T20:51:05 ART" name="tearDown" finished-at="2020-08-03T20:51:06 ART" duration-ms="623" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectByVisibleText status=SUCCESS method=TestSelectOrder.selectByVisibleText()[pri:0, instance:myTests.TestSelectOrder@4d1b0d2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterAll()[pri:0, instance:myTests.TestSelectOrder@4d1b0d2a]" started-at="2020-08-03T20:51:06 ART" name="afterAll" finished-at="2020-08-03T20:51:06 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAll -->
      </class> <!-- myTests.TestSelectOrder -->
      <class name="myTests.TestSearch">
        <test-method is-config="true" signature="beforeAll()[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:06 ART" name="beforeAll" finished-at="2020-08-03T20:50:06 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeAll -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:06 ART" name="setUp" finished-at="2020-08-03T20:50:16 ART" duration-ms="9581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="clickCheckBoxes()[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:16 ART" name="clickCheckBoxes" description="checkboxes" finished-at="2020-08-03T20:50:21 ART" duration-ms="5511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickCheckBoxes -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:21 ART" name="tearDown" finished-at="2020-08-03T20:50:22 ART" duration-ms="650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clickCheckBoxes status=SUCCESS method=TestSearch.clickCheckBoxes()[pri:0, instance:myTests.TestSearch@5c072e3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:22 ART" name="setUp" finished-at="2020-08-03T20:50:29 ART" duration-ms="7577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchDresses()[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:29 ART" name="searchDresses" description="Search by Dresses" finished-at="2020-08-03T20:50:31 ART" duration-ms="1326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchDresses -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:31 ART" name="tearDown" finished-at="2020-08-03T20:50:32 ART" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchDresses status=SUCCESS method=TestSearch.searchDresses()[pri:0, instance:myTests.TestSearch@5c072e3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:32 ART" name="setUp" finished-at="2020-08-03T20:50:40 ART" duration-ms="8451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchTSHIRTS()[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:40 ART" name="searchTSHIRTS" description="Search by TShirts" finished-at="2020-08-03T20:50:41 ART" duration-ms="1376" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected ["El Payaso Plim Plim"] but found ["T-SHIRTS"]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected ["El Payaso Plim Plim"] but found ["T-SHIRTS"]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at myTests.TestSearch.searchTSHIRTS(TestSearch.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTSHIRTS -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:41 ART" name="tearDown" finished-at="2020-08-03T20:50:43 ART" duration-ms="1311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTSHIRTS status=FAILURE method=TestSearch.searchTSHIRTS()[pri:0, instance:myTests.TestSearch@5c072e3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterAll()[pri:0, instance:myTests.TestSearch@5c072e3f]" started-at="2020-08-03T20:50:43 ART" name="afterAll" finished-at="2020-08-03T20:50:43 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAll -->
      </class> <!-- myTests.TestSearch -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
